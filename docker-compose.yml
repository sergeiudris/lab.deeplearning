version: "3.7"

services:

  # app:
  #   image: sample.ml.app
  #   volumes:
  #     - ./samples/app:/opt/app
  #     - ./samples/app/.data:/opt/data
  #     - ./:/opt/root
  #   build:
  #     context: ./samples/app
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 4096M

  # tln:
  #   image: sample.ml.tln
  #   volumes:
  #     - ./samples/tln:/opt/app
  #     - ./samples/tln/.data:/opt/data
  #     - ./:/opt/root
  #   build:
  #     context: ./samples/tln
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 4096M

  # mxnet:
  #   image: sample.ml.mxnet
  #   volumes:
  #     - ./mxnet:/opt/app
  #     - ./mxnet/.data:/opt/data
  #     - ./:/opt/root
  #   build:
  #     context: ./mxnet
  #     # dockerfile: ./gpu.Dockerfile
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   environment:
  #     - DISPLAY=10.0.75.1:0.0
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 8192M

  # nvidia:
  #   image: nvidia/driver:418.40.04-ubuntu18.04
  #   volumes:
  #     - /run/nvidia:/run/nvidia:shared
  #   command: --accept-license
  #   privileged: true
  #   pid: "host"
  #   stdin_open: true
  #   tty: true

  # d2l:
  #   image: sample.ml.d2l
  #   volumes:
  #     - ./d2l:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./d2l
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 8192M

  # el:
  #   image: sample.ml.el
  #   volumes:
  #     - ./el:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./el
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   environment:
  #     - DISPLAY=10.0.75.1:0.0
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 8192M

  # dl4j:
  #   image: sample.ml.dl4j
  #   volumes:
  #     - ./dl4j:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./dl4j
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7788
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 11998M

  # gvm:
  #   image: sample.ml.gvm
  #   volumes:
  #     - ./gvm:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./gvm
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   environment:
  #     - DISPLAY=10.0.75.1:0.0
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 16384M

  # gvm-samples:
  #   image: sample.ml.gvm-samples
  #   volumes:
  #     - ./gvm-samples:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./gvm-samples
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 16384M


  # tf:
  #   image: sample.ml.tf
  #   volumes:
  #     - ./tf:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./tf
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   environment:
  #     - DISPLAY=10.0.75.1:0.0
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 8192M

  # tfjs:
  #   image: sample.ml.tfjs
  #   volumes:
  #     - ./tfjs:/opt/app
  #     - ./:/opt/root
  #     - ../pad:/opt/code/pad
  #   build:
  #     context: ./tfjs
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 7788:7888
  #   # command: bash c dev
  #   command: tail -f /dev/null
  #   environment:
  #     - DISPLAY=10.0.75.1:0.0
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 8192M